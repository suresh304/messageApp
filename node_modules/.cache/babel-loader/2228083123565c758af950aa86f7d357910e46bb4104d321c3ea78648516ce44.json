{"ast":null,"code":"var _jsxFileName = \"/home/allisuresh/feb21chat/src/SignIn.js\";\nimport React from 'react';\nimport GoogleButton from 'react-google-button';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  const login = () => {\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // IdP data available using getAdditionalUserInfo(result)\n      // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // The email of the user's account used.\n      const email = error.customData.email;\n      // The AuthCredential type that was used.\n      const credential = GoogleAuthProvider.credentialFromError(error);\n      // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n      onClick: () => login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","GoogleButton","getAuth","signInWithPopup","GoogleAuthProvider","jsxDEV","_jsxDEV","SignIn","login","auth","provider","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/allisuresh/feb21chat/src/SignIn.js"],"sourcesContent":["import React from 'react'\nimport GoogleButton from 'react-google-button'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n\n\nfunction SignIn() {\n    const login=()=>{\n\n\nconst auth = getAuth();\nsignInWithPopup(auth, provider)\n  .then((result) => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken;\n    // The signed-in user info.\n    const user = result.user;\n    // IdP data available using getAdditionalUserInfo(result)\n    // ...\n  }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.customData.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n\n    }\n  return (\n    <div>\n        <GoogleButton onClick={()=>login}/>\n    </div>\n  )\n}\n\nexport default SignIn"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7E,SAASC,MAAMA,CAAA,EAAG;EACd,MAAMC,KAAK,GAACA,CAAA,KAAI;IAGpB,MAAMC,IAAI,GAAGP,OAAO,EAAE;IACtBC,eAAe,CAACM,IAAI,EAAEC,QAAQ,CAAC,CAC5BC,IAAI,CAAEC,MAAM,IAAK;MAChB;MACA,MAAMC,UAAU,GAAGT,kBAAkB,CAACU,oBAAoB,CAACF,MAAM,CAAC;MAClE,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAW;MACpC;MACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAAI;MACxB;MACA;IACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClB;MACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClC;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,UAAU,CAACD,KAAK;MACpC;MACA,MAAMX,UAAU,GAAGT,kBAAkB,CAACsB,mBAAmB,CAACP,KAAK,CAAC;MAChE;IACF,CAAC,CAAC;EAEA,CAAC;;EACH,oBACEb,OAAA;IAAAqB,QAAA,eACIrB,OAAA,CAACL,YAAY;MAAC2B,OAAO,EAAEA,CAAA,KAAIpB;IAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEV;AAACC,EAAA,GA/BQ1B,MAAM;AAiCf,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}